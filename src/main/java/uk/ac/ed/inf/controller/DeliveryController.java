package uk.ac.ed.inf.controller;import uk.ac.ed.inf.controller.CoreRestController;import uk.ac.ed.inf.ilp.data.NamedRegion;import uk.ac.ed.inf.ilp.data.Order;import uk.ac.ed.inf.ilp.data.Restaurant;import java.io.IOException;import java.util.Arrays;import java.util.List;public class DeliveryController {    private final CoreRestController coreRestController;    public DeliveryController(String baseUrl) {        this.coreRestController = new CoreRestController(baseUrl);    }    public List<Restaurant> getAllRestaurants() {        try {            Restaurant[] restaurantsArray = coreRestController.getRestaurants();            return Arrays.asList(restaurantsArray); // Convert array to list        } catch (Exception e) {            // Handle exception or rethrow it            e.printStackTrace();            return null;        }    }    public List<NamedRegion> getNoFlyZones() {        try {            return coreRestController.getNoFlyZones();        } catch (Exception e) {            // Handle exception or rethrow it            e.printStackTrace();            return null;        }    }    public NamedRegion getCentralArea() {        try {            return coreRestController.getCentralArea();        } catch (Exception e) {            // Handle exception or rethrow it            e.printStackTrace();            return null;        }    }    public List<Order> getAllOrders() {        try {            return coreRestController.getOrders();        } catch (Exception e) {            // Handle exception or rethrow it            e.printStackTrace();            return null;        }    }    public List<Order> getOrdersForDate(String date) {        try {            return coreRestController.getOrdersForDate(date);        } catch (Exception e) {            // Handle exception or rethrow it            e.printStackTrace();            return null;        }    }    public boolean validateOrders(List<Order> orders) {        return true;    }    // Add more delivery related methods here}