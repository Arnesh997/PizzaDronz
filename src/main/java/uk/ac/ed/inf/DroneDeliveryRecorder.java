package uk.ac.ed.inf;import com.fasterxml.jackson.databind.ObjectMapper;import com.fasterxml.jackson.databind.SerializationFeature;import com.fasterxml.jackson.databind.module.SimpleModule;import uk.ac.ed.inf.ilp.data.Order;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.nio.file.StandardOpenOption;import java.time.LocalDate;import java.time.format.DateTimeFormatter;import java.util.List;public class DroneDeliveryRecorder {    private LocalDate date;    private Path resultFilesDirectory;    private ObjectMapper objectMapper;    public DroneDeliveryRecorder(LocalDate date) {        this.date = date;        this.resultFilesDirectory = Paths.get("ResultFiles");        this.objectMapper = new ObjectMapper();        this.objectMapper.enable(SerializationFeature.INDENT_OUTPUT);        try {            Files.createDirectories(resultFilesDirectory); // Ensure the directory exists        } catch (IOException e) {            e.printStackTrace();        }    }    public void createDeliveriesFile(List<Order> orders) throws IOException {        String filename = "deliveries-" + date.format(DateTimeFormatter.ofPattern("yyyy-MM-dd")) + ".json";        Path filePath = resultFilesDirectory.resolve(filename);        SimpleModule module = new SimpleModule();        module.addSerializer(Order.class, new CustomOrderSerializer());        objectMapper.registerModule(module);        String jsonContent = objectMapper.writeValueAsString(orders);        Files.writeString(filePath, jsonContent, StandardOpenOption.CREATE);    }}